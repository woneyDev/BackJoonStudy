import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.Deque;
import java.util.LinkedList;

public class Main {
    public static void main(String[] args) {
        try (BufferedReader br      = new BufferedReader(new InputStreamReader(System.in));
             BufferedWriter bw      = new BufferedWriter(new OutputStreamWriter(System.out))) {

            int a                   = 0;
            int b                   = 0;
            int size                = Integer.parseInt(br.readLine());

            Deque<Integer> deq      = new LinkedList<>();

            for ( int i = 0; i < size; i ++ ) {
                String tmp          = br.readLine();
                a                   = Integer.parseInt(tmp.split(" ")[0]);
                if ( tmp.split(" ").length > 1 ) b = Integer.parseInt(tmp.split(" ")[1]);

                switch ( a ) {
                    case 1 : deq.addFirst(b); break;
                    case 2 : deq.addLast(b); break;
                    case 3 :
                        if ( deq.isEmpty() ) bw.write(-1 + "\n");
                        else bw.write(deq.pop() + "\n");
                        break;
                    case 4 :
                        if ( deq.isEmpty() ) bw.write( -1 + "\n");
                        else {
                            bw.write(deq.peekLast() + "\n");
                            deq.removeLast();
                        }
                        break;
                    case 5 : bw.write(deq.size() + "\n"); break;
                    case 6 :
                        if ( deq.isEmpty() ) bw.write(1 + "\n");
                        else bw.write(0 + "\n");
                        break;
                    case 7 :
                        if ( deq.isEmpty() ) bw.write(-1 + "\n");
                        else bw.write(deq.peek() + "\n");
                        break;
                    case 8 :
                        if ( deq.isEmpty() ) bw.write(-1 + "\n");
                        else bw.write(deq.peekLast() + "\n");
                        break;
                }
            }
            bw.flush();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
