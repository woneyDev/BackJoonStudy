import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;

public class Main {
    public static void main(String[] args) {
        try (BufferedReader br          = new BufferedReader(new InputStreamReader(System.in));
             BufferedWriter bw          = new BufferedWriter(new OutputStreamWriter(System.out))) {

            int LMT                     = 64;

            String str                  = br.readLine();

            int x                       = Integer.parseInt(str.split(" ")[0]);
            int y                       = Integer.parseInt(str.split(" ")[1]);

            boolean[][] arr             = new boolean[x][y];

            for ( int i = 0; i < x; i ++ ) {
                str                     = br.readLine();

                for ( int j = 0; j < y; j ++ ) {
                    if ( str.charAt(j) == 'W' ) {
                        arr[i][j] = true;
                    } else {
                        arr[i][j] = false;
                    }

                }
            }

            x = x - 7;
            y = y - 7;

            for ( int i = 0; i < x; i ++ ) {
                for ( int j = 0; j < y; j ++ ) {
                    LMT = find(i, j, LMT, arr);
                }
            }
            bw.write(LMT + "\n");
            bw.flush();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    static int find(int x, int y, int LMT, boolean[][] arr) {
        int endX                        = x + 8;
        int endY                        = y + 8;

        int cnt                         = 0;

        boolean color                   = arr[x][y];

        for ( int i = x; i < endX; i ++ ) {
            for ( int j = y; j < endY; j ++ ) {
                if ( arr[i][j] != color ) cnt ++;
                color = !color;
            }
            color = !color;
        }
        cnt = Math.min(cnt, 64 - cnt);

        return LMT = Math.min(LMT, cnt);
    }
}
