import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;

public class Main {

    static Integer[] dp;

    public static void main(String[] args) {
        try (BufferedReader br          = new BufferedReader(new InputStreamReader(System.in));
             BufferedWriter bw          = new BufferedWriter(new OutputStreamWriter(System.out))) {

            int N                       = Integer.parseInt(br.readLine());

            dp                          = new Integer[N + 1];
            dp[0]                       = dp[1] = 0;

            bw.write(recur(N) + "\n");
            bw.flush();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    static int recur(int N) {

        if (dp[N] == null) {

            if ( N % 6 == 0 )       dp[N] = Math.min(recur(N - 1), Math.min(recur(N / 3), recur(N / 2))) + 1;
            else if ( N % 3 == 0 )  dp[N] = Math.min(recur(N / 3), recur(N - 1)) + 1;
            else if ( N % 2 == 0 )  dp[N] = Math.min(recur(N / 2), recur(N - 1)) + 1;
            else                    dp[N] = recur(N - 1) + 1;

        }
        return dp[N];
    }
}
