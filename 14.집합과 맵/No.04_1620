import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.HashMap;
import java.util.StringTokenizer;

public class Main {
    public static void main(String[] args) {
        try (BufferedReader br          = new BufferedReader(new InputStreamReader(System.in));
             BufferedWriter bw          = new BufferedWriter(new OutputStreamWriter(System.out))) {

            StringTokenizer st          = new StringTokenizer(br.readLine());

            int monsterBall             = Integer.parseInt(st.nextToken());
            int find                    = Integer.parseInt(st.nextToken());

            HashMap<String, Integer> nameMap = new HashMap<String, Integer>();

            String[] nameArr            = new String[monsterBall + 1];
            StringBuilder sb            = new StringBuilder();

            for ( int i = 1; i <= monsterBall; i ++ ) {
                String name = br.readLine();
                nameMap.put(name, i);
                nameArr[i] = name;
            }

            while ( find != 0 ) {
                find --;
                String monster = br.readLine();
                if ( isNumber(monster) ) {
                    int idx = Integer.parseInt(monster);
                    sb.append(nameArr[idx]);
                } else {
                    sb.append(nameMap.get(monster));
                }
                sb.append("\n");
            }
            bw.write(sb.toString());
            bw.flush();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    static boolean isNumber(String s) {
        try {
            Integer.parseInt(s);
            return true;
        }
        catch (NumberFormatException e) {
            return false;
        }
    }
}
