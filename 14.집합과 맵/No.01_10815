import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Main {
    public static void main(String[] args) {
        try (BufferedReader br          = new BufferedReader(new InputStreamReader(System.in));
             BufferedWriter bw          = new BufferedWriter(new OutputStreamWriter(System.out))) {

            int targetSize              = Integer.parseInt(br.readLine());
            int[] cards                 = new int[targetSize];

            StringBuilder sb            = new StringBuilder();
            StringTokenizer st          = new StringTokenizer(br.readLine());

            for ( int i = 0; i < targetSize; i ++ ) cards[i] = Integer.parseInt(st.nextToken());
            Arrays.sort(cards);

            int sgCardSize              = Integer.parseInt(br.readLine());
            st                          = new StringTokenizer(br.readLine());

            for ( int i = 0; i < sgCardSize; i ++ ) {
                int temp = Integer.parseInt(st.nextToken());

                int start   = 0;
                int last    = targetSize - 1;
                int mid     = 0;
                
                boolean trg = true;
                
                while (start <= last) {
                    mid = (start + last) / 2;

                    if (cards[mid] == temp) {
                        sb.append("1").append(" ");
                        trg = false;
                        break;
                    }
                    if (cards[mid] < temp) start = mid + 1;
                    else last = mid - 1;
                }
                if ( trg ) sb.append("0").append(" ");
            }

            bw.write(sb.toString());
            bw.flush();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
